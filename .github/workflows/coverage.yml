name: ðŸ§ª Test Coverage

on:
  push:
    branches: [master]
    paths-ignore:
      - "**/README.md"
      - "**/.npmignore"
      - "**/.gitignore"
      - "**/.dockerignore"
      - "**/LICENSE"
  pull_request:
    branches: [master]
    paths-ignore:
      - "**/README.md"
      - "**/.npmignore"
      - "**/.gitignore"
      - "**/.dockerignore"
      - "**/LICENSE"

jobs:
  build:
    name: ðŸ”¢ Hack Crypto [OS ${{ matrix.os }} / Node ${{ matrix.node-version }}]
    strategy:
      matrix:
        os: [
            # Acknowledgement (H0llyW00dzZ): In the realm of cryptographic operations, ARM architecture is leading and surpassing all others.
            # ubuntu-latest, is disabled because ubuntu-24.04 is equivalent to ubuntu-latest for now
            ubuntu-24.04,
            ubuntu-22.04,
            # windows-latest, is disabled because windows-2022 is equivalent to windows-latest for now
            windows-2025,
            windows-2022,
            # macos-latest,
            macos-15, # macos-15 is macos-latest, I'm pretty sure
            macos-14,
            macos-13,
            # Added for ARM because it's free
            ubuntu-24.04-arm,
            ubuntu-22.04-arm,
            # windows-11-arm is disabled because "Error: Unable to find Node version '21.x' for platform win32 and architecture arm64." (RIP - Unsupported)
          ]
        node-version: [19.x, 20.x, 21.x, 22.x, 23.x, 24.x]

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v5

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"

      - name: Install dependencies
        run: npm install

      - name: Run tests with coverage
        # This should be: if some tests fail, continue with the matrix without canceling other tasks that haven't completed or are still running.
        id: hack-crypto-coverage-test
        continue-on-error: true
        run: npm run test:coverage 2>&1 | tee hack-crypto-test-output.log

        # TODO: Consider improving this CI/CD system later with a feature that performs cryptographic operations,
        # such as GPG/OpenPGP (Based ECC), or uses math-based cryptography for signing as an example.
      - name: Generate SHA-512 digest of test logs on failure
        if: ${{ steps.hack-crypto-coverage-test.outcome == 'failure' }}
        run: |
          if ($env:RUNNER_OS -eq 'Windows') {
            certutil -hashfile hack-crypto-test-output.log SHA512 > hack-crypto-test-output.log.sha512
          } else {
            shasum -a 512 hack-crypto-test-output.log > hack-crypto-test-output.log.sha512
          }
        shell: pwsh

      - name: Upload test logs as artifacts on failure
        if: ${{ steps.hack-crypto-coverage-test.outcome == 'failure' }}
        uses: actions/upload-artifact@v4
        with:
          name: hack-crypto-test-logs-${{ matrix.os }}-node-${{ matrix.node-version }}
          path: |
            hack-crypto-test-output.log
            hack-crypto-test-output.log.sha512
          retention-days: 7

      - name: Upload coverage to Codecov
        # This should be: if some tests fail, continue with the matrix without canceling other tasks that haven't completed or are still running.
        continue-on-error: true
        uses: codecov/codecov-action@v5
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
        with:
          files: coverage/lcov.info
          verbose: true
